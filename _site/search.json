[
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2.html",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2.html",
    "title": "In-class Exercise 2(Why Nigeria has so many broken waterpoints?)",
    "section": "",
    "text": "Many water points in Nigeria are non-functional and it could be insightful to look into whether there are additional reasons that causes these non-functional water points and if there is any spatial correlations that could be unearthed."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#getting-started",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#getting-started",
    "title": "In-class Exercise 2(Why Nigeria has so many broken waterpoints?)",
    "section": "Getting Started",
    "text": "Getting Started\nWe would be using R for this geospatial analysis and the R Packages used are :\nsf : preprocessing and importing of geospatial data\ntidyverse : facilitate the data science work flow\ntmap : Used for visualisation of the various plots used in this analysis\nspdep : Spatial weight analysis package\nfunModeling : Usef for statistical modelling and visualisation\n\npacman::p_load(sf,tidyverse,tmap,spdep,funModeling)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#importing-geospatial-data",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#importing-geospatial-data",
    "title": "In-class Exercise 2(Why Nigeria has so many broken waterpoints?)",
    "section": "Importing Geospatial Data",
    "text": "Importing Geospatial Data\nFile used for this analysis:\n\ngeo_export [file containing information of water points in Nigeria]\ngeoBoundaries-NGA-ADM2 [contains geographical and boundary data for Nigeria under admin level 2]\n\n\nImporting water point geospatial data\nFirst of all we import the data and check if Geodetic CRS is same for both files\n\n#command above make sure quarto does not execute\nwp <- st_read(dsn = \"geodata\",\n        layer = \"geo_export\",\n        crs = 4326) %>%\n  filter(clean_coun == \"Nigeria\")\n\nin the code chunk below, write_rds() of readr package is used to save the extracted sf data table into an output file in rds data format.\n\nwp_nga <- write_rds(wp,\"geodata/wp_nga.rds\")\n\nNext st_read is used to read the geoboundaries file, here we confirm that the second file’s Geodetic CRS is also WGS 84\n\nnga <- st_read(dsn = \"geodata\",\n              layer = \"geoboundaries-NGA-ADM2\")\n\nNext, we reformat the NA values into string for easier processing\n\nwp_nga <- read_rds(\"geodata/wp_nga.rds\") %>%\n  mutate(status_cle=replace_na(status_cle,\"Unknown\"))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#exploratory-data-analysis",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#exploratory-data-analysis",
    "title": "In-class Exercise 2(Why Nigeria has so many broken waterpoints?)",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nBefore we start with data wrangling, some data analysis shall be performed to see if we can get certain insights. From the chart below, we can see that almost 31% of the waterpoints are non-functional with 11% status that is unknown. To have 31% of the whole nation’s water point be non-functional is mind boggling and this definitely deserves a deep dive into why it is happening.\n\nfreq(data=wp_nga,\n     input = 'status_cle')\n\nin the code chunk below,filter function of dplyr is used to select functional water points\n\nwpt_functional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nBelow is the frequency statistics for the functional water points:\n\nfreq(data = wpt_functional,\n     input = \"status_cle\")\n\nBelow is the frequency statistics for the non-functional water points:\n\nwpt_nonfunctional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Abandoned/Decommissioned\", \n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non-Functional due to dry season\"))\n\n\nfreq(data=wpt_nonfunctional, \n     input = 'status_cle')\n\nWe also filter the status unknown waterpoints into one set for further visualisation later\n\nwpt_unknown <- wp_nga %>%\n  filter(status_cle==\"Unknown\")\n\nNext we look deeper into the types of water points available:\n\nfreq(data=wpt_functional, \n     input = 'water_te_2')\n\nFrom the chart below and the one above, we can see that Hand Pump and Mechanized Pump are the only two more significant types of pumps used with hand pumps about 2/3 of entire population probably due to technological or logitistical constraints. As there is a higher percentage of functional hand pump water points than non-functional hand pump water points, it could be worth while to include it in this analysis.\n\nfreq(data=wpt_nonfunctional, \n     input = 'water_te_2')\n\nA look at the water source finds that borehole takes up most of the population so we would not look further into this\n\nfreq(data=wpt_nonfunctional, \n     input = 'water_sour')\n\nNext, we filter the hand pump and mechanised pump non-functional water points:\n\nwpt_nonfunctionalhand <- wpt_nonfunctional %>%\n  filter(water_te_2 %in%\n           c(\"Hand Pump\"))\nwpt_nonfunctionalmech <- wpt_nonfunctional %>%\n  filter(water_te_2 %in%\n           c(\"Mechanized Pump\"))\n\nHere some additional data wrangling is done to generate the numbers for each type of status for the water points in each area:\n\ntotal : total number of water points\nfunctional : functional water points that could be in use or not in use\nnon-functional : non-functional water points that includes water points that are not in use due to dry season\nunknown : water points which we have no information about the status\n\nIn addition to that, 1 is add to ShapeName if duplicate is found in case there are two area names that are same but still has to be differentiated.\n\nnga_wp <- nga %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(nga, wp_nga))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(nga, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(nga, wpt_nonfunctional))) %>%\n  mutate(`wpt unknown` = lengths(\n    st_intersects(nga, wpt_unknown))) %>%\n  mutate(`wpt non-functional` = replace_na(`wpt non-functional`, 0)) %>%\n  mutate(`wpt functional` = replace_na(`wpt functional`, 0)) %>%\n  mutate(`wpt non-functional hand pump` = lengths(\n    st_intersects(nga, wpt_nonfunctionalhand))) %>%\n  mutate(`wpt non-functional mech pump` = lengths(\n    st_intersects(nga, wpt_nonfunctionalmech))) %>%\n  mutate(shapeName = case_when(duplicated(shapeName) ~ str_c(shapeName, '1', sep = ''), TRUE ~ shapeName))\n\n\nGet Percentage of functional/non-functional against total\nNext some additional wrangling is done to get ratio or the percentage of functional and non-functional water points against the total\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = case_when(\n    `wpt functional` == 0 ~ 0,\n    TRUE ~ `wpt functional`/`total wpt`\n    )) %>%\n  mutate(pct_nonfunctional = case_when(\n    `wpt non-functional` == 0 ~ 0,\n    TRUE ~ `wpt non-functional`/`total wpt`))\n\nWe then write this into a rds file before deleting the source files as they are too large to commit to github\n\nwrite_rds(nga_wp, \"geodata/nga_wp.rds\")\n\nBelow is the rough distribution plots of each tally of water point:\n\ntotal\nfunctional\nnon-functional\nunknown\n\n\nnga_wp <- read_rds(\"geodata/nga_wp.rds\")\nnga_wp26391 <- st_transform(nga_wp, \n                              crs = 26391)\ntotal <- tm_shape(nga_wp26391) +\n  tm_fill(\"total wpt\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"total\",legend.height = 0.25, main.title.size = 0.8,\n            legend.width = 0.35)\nwp_functional <- tm_shape(nga_wp26391) +\n  tm_fill(\"wpt functional\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"functional\",legend.height = 0.25, main.title.size = 0.8,\n            legend.width = 0.35)\nwp_nonfunctional <- tm_shape(nga_wp26391) +\n  tm_fill(\"wpt non-functional\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"non-functional\",legend.height = 0.25, main.title.size = 0.8,\n            legend.width = 0.35)\nunknown <- tm_shape(nga_wp26391) +\n  tm_fill(\"wpt unknown\",\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Unknown\",legend.height = 0.25, main.title.size = 0.8,\n            legend.width = 0.35)\n\n\ntmap_arrange(total, wp_functional, wp_nonfunctional, unknown, asp=1, ncol=2)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#analysis-of-non-functional-water-points",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#analysis-of-non-functional-water-points",
    "title": "In-class Exercise 2(Why Nigeria has so many broken waterpoints?)",
    "section": "Analysis of non-functional water points",
    "text": "Analysis of non-functional water points\n\nFunctional water points(%) vs Non-functional water points(%)\nFirst observation is that for functional water points, there are more areas with high percentage of functioning water points (out of all water points) in the northern region of the country. This is especially true for the central northern regions. On the other hand, southern regions is observed to higher concentrations of non-functional water points.\n\nset.seed(8888)\nwp_functional <- tm_shape(nga_wp26391) +\n  tm_fill(\"pct_functional\",\n          n = 5,\n          style = \"bclust\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Ratio of functional water points\",main.title.size = 1,legend.height = 0.25, \n            legend.width = 0.35)\nwp_nonfunctional <- tm_shape(nga_wp26391) +\n  tm_fill(\"pct_nonfunctional\",\n          n = 5,\n          style = \"bclust\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Ratio of non-functional water points\",main.title.size =1,legend.height = 0.25, \n            legend.width = 0.35)\n\ntmap_arrange(wp_functional, wp_nonfunctional, ncol=2)\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\n\n\nNon-functional Mechanical Pump Waterpoint vs Non functional Hand pump Waterpoint\nAt first glance, it seems that there are more non-functional mechanical pump waterpoints in the southern hemisphere of the country which correlates with the general non-functional waterpoint population. Meanwhile for non functional hand pump, it is not as concentrated but also has a few clusters where the number is quite high.\n\nwp_functional <- tm_shape(nga_wp26391) +\n  tm_fill(\"wpt non-functional mech pump\",\n          n = 5,\n          style = \"fisher\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"non-functional mechanical pump\",main.title.size =1,legend.height = 0.25, \n            legend.width = 0.35)\nwp_nonfunctional <- tm_shape(nga_wp26391) +\n  tm_fill(\"wpt non-functional hand pump\",\n          n = 5,\n          style = \"fisher\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"non-functional hand pump\",main.title.size =1,legend.height = 0.25, \n            legend.width = 0.35)\n\ntmap_arrange(wp_functional, wp_nonfunctional, ncol=2)\n\n\n\n\nNext we take a look at the Queen contiguity based neighbours map\n\nwm_q <- poly2nb(nga_wp, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\n\nTo get our longitude values we map the st_centroid function over the geometry column of us.bound and access the longitude value through double bracket notation [[]] and 1. This allows us to get only the longitude, which is the 1st value in each centroid and the latittude value which is the 2nd value\n\nlongitude <- map_dbl(nga_wp$geometry, ~st_centroid(.x)[[1]])\nlatitude <- map_dbl(nga_wp$geometry, ~st_centroid(.x)[[2]])\n\nHere the latitude and longitude coordinates are binded using cbind\n\ncoords <- cbind(longitude, latitude)\n\n\nplot(nga_wp$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\nrswm_q <- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nsummary(rswm_q, zero.policy = TRUE)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\nWeights style: W \nWeights constants summary:\n    n     nn  S0       S1       S2\nW 773 597529 773 285.0658 3198.414\n\n\n\ndist <- nbdists(wm_q, coords, longlat = TRUE)\nids <- lapply(dist, function(x) 1/(x))\n\n\nrswm_ids <- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\n\nsummary(rswm_ids, zero.policy = TRUE)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\nWeights style: B \nWeights constants summary:\n    n     nn       S0      S1      S2\nB 773 597529 182.3683 26.1191 252.344\n\n\nWe then get the average neighbour value which is also known as spatial lag using the listw function\n\nnga_wp.lag <- lag.listw(rswm_q, nga_wp$\"pct_nonfunctional\",zero.policy = TRUE)\n\nNext we append the spatial lag column onto our dataframe\n\nlag.list <- list(nga_wp$shapeName, lag.listw(rswm_q, nga_wp$\"pct_nonfunctional\",zero.policy = TRUE))\nlag.res <- as.data.frame(lag.list)\ncolnames(lag.res) <- c(\"shapeName\", \"lag Nonfunctional\")\nnga_wp<- left_join(nga_wp,lag.res)\n\n\n\nSpatial lag with row standardized weights\n\nnonfunctional <- qtm(nga_wp, \"pct_nonfunctional\")\nlag_nonfunctional <- qtm(nga_wp, \"lag Nonfunctional\")\ntmap_arrange(nonfunctional, lag_nonfunctional, asp=1, ncol=2)\n\n\n\n\n\n\nMoran’s I global auto correlation\nBased on Moran’s I tests below, we can see that in general ,the null hypothesis that the non functional water points are randomly distributed is rejected. As Moran’s I is positive, we can say that there is positive auto-correlation and there is clustering between areas with similar values.\n\nmoran.test(nga_wp$\"wpt non-functional\", \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  nga_wp$\"wpt non-functional\"  \nweights: rswm_q  n reduced by no-neighbour observations\n  \n\nMoran I statistic standard deviate = 20.043, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.433932927      -0.001295337       0.000471516 \n\n\nThe observation for nonfunctional waterpoint to total waterpoint ratio is the Moran’s I is around 0.04 high and p value is still very low therefore null hypothesis is also rejected\n\nset.ZeroPolicyOption(TRUE)\n\n[1] FALSE\n\nmoran.test(nga_wp$\"pct_nonfunctional\", \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  nga_wp$pct_nonfunctional  \nweights: rswm_q  n reduced by no-neighbour observations\n  \n\nMoran I statistic standard deviate = 22.343, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.4850220148     -0.0012953368      0.0004737605 \n\n\nFor next two Moran’s I test for hand pump and mechanical pump, we can see that both null hypothesis is also rejected with positive Moran’s I score which suggest clustering of similar values with the hand pump having a higher value.\n\nmoran.test(nga_wp$\"wpt non-functional hand pump\", \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  nga_wp$\"wpt non-functional hand pump\"  \nweights: rswm_q  n reduced by no-neighbour observations\n  \n\nMoran I statistic standard deviate = 22.972, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.4972328323     -0.0012953368      0.0004709725 \n\n\n\nmoran.test(nga_wp$\"wpt non-functional mech pump\", \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  nga_wp$\"wpt non-functional mech pump\"  \nweights: rswm_q  n reduced by no-neighbour observations\n  \n\nMoran I statistic standard deviate = 21.153, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.4572511744     -0.0012953368      0.0004699257 \n\n\n\nbperm= moran.mc(nga_wp$\"pct_nonfunctional\", \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  nga_wp$pct_nonfunctional \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.48502, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\nMoran’s I correlogram\nIn the correlogram below, the distribution of Moran’s I is rather significant at step 1 ranging from 0.4 to 0.5. the Moran’s I score is it is clear that with the increase in order or steps, the Moran’s I score decreases. This shows that there is some sort of spatial dependence and that the areas are more likely similar to neighbours at order 1 than neighbours at higher orders which makes sense geographically as resources could be shared if they are not too far off.\n\nMI_corr_nf <- sp.correlogram(wm_q,nga_wp$\"pct_nonfunctional\" , order = 10, method = \"I\", style = \"W\")\n\nplot(MI_corr_nf)\n\n\n\n\nGeary’s C correlogram shows a similar phenomena, where spatial autocorrelation drops and goes to 1 and beyond as the order goes up\n\nG_corr_nf <- sp.correlogram(wm_q,nga_wp$\"pct_nonfunctional\" , order = 10, method = \"C\", style = \"W\")\n\nplot(G_corr_nf)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#further-cluster-and-outlier-analysis-on-non-functional-waterpoints",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#further-cluster-and-outlier-analysis-on-non-functional-waterpoints",
    "title": "In-class Exercise 2(Why Nigeria has so many broken waterpoints?)",
    "section": "Further cluster and outlier analysis on non-functional waterpoints",
    "text": "Further cluster and outlier analysis on non-functional waterpoints\n\nComputing Local Moran’s I\n\nfips <- order(nga_wp$shapeName)\nlocalMI <- localmoran(nga_wp$\"pct_nonfunctional\", rswm_q)\nhead(localMI)\n\n         Ii          E.Ii    Var.Ii      Z.Ii Pr(z != E(Ii))\n1 0.7104808 -0.0008481017 0.1633313 1.7600935    0.078391961\n2 0.4787122 -0.0005236472 0.1346804 1.3058614    0.191599708\n3 2.9220515 -0.0037801442 0.9690735 2.9721518    0.002957204\n4 0.2666687 -0.0016485516 0.1805678 0.6314347    0.527756347\n5 1.1001242 -0.0007647464 0.1176793 3.2091756    0.001331162\n6 0.5273909 -0.0009383859 0.1028556 1.6473678    0.099482464\n\n\n\nnga_wp.localMI <- cbind(nga_wp,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\nMapping local Moran’s I\n\nlocal_moran <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Local Moran's I score\",legend.height = 0.25, \n            main.title.size = 0.8,legend.width = 0.35)\nlocal_moran_pval <-tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Local Moran's I p-value\",legend.height = 0.25, \n            main.title.size = 0.8,legend.width = 0.35)\ntmap_arrange(local_moran, local_moran_pval, asp=1, ncol=2)\n\n\n\n\n\n\nMoran Scatterplot with standardised variable\nUsually the Moran scatterplot is generated before we move to the LISA map\n\nnga_wp$Z.pct_nonfunctional <- scale(nga_wp$\"pct_nonfunctional\") %>% \n  as.vector \n\nThis scatter plot shows the relationship between the ratio/percentage of nonfunctional waterpoints and the mean value of non functional waterpoints of its neighbouring areas\n\nnci <- moran.plot(nga_wp$Z.pct_nonfunctional, rswm_q,\n                  labels=as.character(nga_wp$shapeName), \n                  xlab=\"ratio of nonfunctional waterpoints\", \n                  ylab=\"Spatially Lag ratio\")\n\n\n\n\nPreparing LISA map\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\nnga_wp$\"lag Nonfunctional\" <- lag.listw(rswm_q, nga_wp$\"pct_nonfunctional\")\nDV <- nga_wp$\"lag Nonfunctional\" - mean(nga_wp$\"lag Nonfunctional\")  \nLM_I <- localMI[,1] - mean(localMI[,1])   \nsignif <- 0.05  \nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4     \nquadrant[localMI[,5]>signif] <- 0\n\n\n\nLISA Map\nLISA maps are good for visualising spatial correlation. IT allows us to know the area or clusters we should pay attention to or where there is significance. Second, it establishes a proportional relationship between the sum of the local statistics and a corresponding global statistic. For the top right of the map, it should be ignored as the values were changed from NA to 0, resulting in a huge low-low region\n\nnga_wp.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5) +\n  tm_layout(main.title = \"Local Indicator of Spatial Association\",\n            legend.height = 0.25, \n            main.title.size = 0.8,legend.width = 0.35)\ntmap_arrange(local_moran, LISAmap, \n             asp=1, ncol=2)\n\n\n\n\nBased on the LISA map above and the map of Nigera region below, we can see there could be some interesting points where the high-high region(mostly clustered at bottom left) where waterpoints are most non-function are low lying or coastal regions. This could potentially mean that the waterpoints might lack maintenance or usage as the population there relies on other water sources but more investigation would be required to prove that this correlation does mean causation.\n\n\n\nHot spot and cold spot analysis\nFirst we determine the cutoff distance based on the coordinates. The statistics below show that the largest first neighbour distance is approximately 71.661 units.\n\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.662  12.815  20.242  22.031  27.706  71.661 \n\n\nwe then convert the nb object into spatial weights object and also take a look at the statistics of the neighbour list\n\nwm_d62 <- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 13830 \nPercentage nonzero weights: 2.308555 \nAverage number of links: 17.86822 \n6 regions with no links:\n93 112 123 236 452 670\n\n\n\nwm62_lw <- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 13830 \nPercentage nonzero weights: 2.308555 \nAverage number of links: 17.86822 \n6 regions with no links:\n93 112 123 236 452 670\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \n 6 12 16 33 38 47 47 44 26 38 20 21 17 28 19 17 29 10  6 14  5 11  5 18 11 15 \n26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 \n16 12 15 13 16 11  7  9  9 11  3  9  6  7  8  4  4  6  2  6  6  5  5  8  3  2 \n52 53 54 55 56 57 \n 5  5  5  1  1  1 \n12 least connected regions:\n3 90 91 163 237 271 402 494 507 649 708 710 with 1 link\n1 most connected region:\n619 with 57 links\n\nWeights style: B \nWeights constants summary:\n    n     nn    S0    S1      S2\nB 768 589824 13830 27660 1591400\n\n\n\nknn <- knn2nb(knearneigh(coords, k=12))\nknn\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 9288 \nPercentage nonzero weights: 1.550388 \nAverage number of links: 12 \nNon-symmetric neighbours list\n\n\n\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 9288 \nPercentage nonzero weights: 1.550388 \nAverage number of links: 12 \nNon-symmetric neighbours list\nLink number distribution:\n\n 12 \n774 \n774 least connected regions:\nwith 12 links\n774 most connected regions:\nwith 12 links\n\nWeights style: B \nWeights constants summary:\n    n     nn   S0    S1     S2\nB 774 599076 9288 16750 453344\n\n\n\ngi.fixed <- localG(nga_wp$\"pct_nonfunctional\", wm62_lw)\nnga_wp.gi <- cbind(nga_wp, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\nWe can see from the heatmap that most of the hot spots are clusters at the bottom left of the map while the cold spots are at the top centre of the map\n\nmap_nonfunctional <- tm_shape(nga_wp) +\n  tm_fill(\"pct_nonfunctional\",\n          n = 5,\n          style = \"bclust\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Ratio of functional water points\",main.title.size = 1,legend.height = 0.25, \n            legend.width = 0.35)\nGimap <-tm_shape(nga_wp.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title = \"local Gi of non-functional water points\",\n            main.title.size =1,legend.height = 0.25, \n            legend.width = 0.35)\n\ntmap_arrange(map_nonfunctional, Gimap, asp=1, ncol=2)\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\n\n\nAdaptive distance Gi\n\ngi.adaptive <- localG(nga_wp$\"pct_nonfunctional\",knn_lw)\nnga_wp.gi <- cbind(nga_wp, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\nGimap <- tm_shape(nga_wp.gi ) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title = \"adaptive local Gi of non-functional water points\",\n            main.title.size =1,legend.height = 0.25, \n            legend.width = 0.35)\n\ntmap_arrange(map_nonfunctional,\n             Gimap, \n             asp=1, \n             ncol=2)\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\nAs usual we see that the hot spots are more towards the bottom region that are coastal areas, if we compare with the rainfall map below, there seems to be some correlation between the rainfall and the clusters. Based on this observation there is some correlation where cold spots are areas with lower rainfall (especially for northern regions). This means there is indeed a possibility that due to lack of other forms of water resource, the waterpoints are more well maintained as they are a valuable resource in these areas. This remains a conjecture till more studies are done.\n\n\n\nNon-functional hand pumps Analysis\nAs hand pump water point makes up roughly 70% of all water points, it could be worthwhile to look at the hot spots and cold spots (especially since its concentration of non-functional water points differ from general population).\n\ngi.adaptivehand <- localG(nga_wp$\"wpt non-functional hand pump\",knn_lw)\nnga_wp.gi_hand <- cbind(nga_wp, as.matrix(gi.adaptivehand)) %>%\n  rename(gstat_adaptivehand = as.matrix.gi.adaptivehand.)\n\nFrom the plots below, we can see that most hand pumps are non functional in the middle strip/section of the map. It is perhaps interesting to note that the hottest spot very likely coincides with the capital city, kaduna. Another small correlation found is by comparing with the rainfall map above. It seems that most hand pump hot spots are near regions classified as G_Savanna or Guinea Savannah. Could it be that more of these areas are savanna areas with lower human population or more animals that results in less maintenance of the waterpoints?\n\nmap_nonfunctionalhand <- tm_shape(nga_wp) +\n  tm_fill(\"wpt non-functional hand pump\",\n          n = 5,\n          style = \"bclust\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"non-functional hand pumps\",\n            main.title.size =1,legend.height = 0.25, legend.width = 0.35)\nGimap <- tm_shape(nga_wp.gi_hand) + \n  tm_fill(col = \"gstat_adaptivehand\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)+\n  tm_layout(main.title = \"local Gi of non-functional hand pumps\",\n            main.title.size =1,legend.height = 0.25, legend.width = 0.35)\n\ntmap_arrange(map_nonfunctionalhand,\n             Gimap, \n             asp=1, \n             ncol=2)\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#conclusion",
    "href": "In-class_Ex/In-class_Ex2/In-class_Ex2.html#conclusion",
    "title": "In-class Exercise 2(Why Nigeria has so many broken waterpoints?)",
    "section": "Conclusion",
    "text": "Conclusion\nBased on the various analysis and visualisation, we can quite safely say that there seems to be spatial auto-correlation in the various regions of Nigeria. There are clusters where less non-functional water points which are surround by neighbours with the similar ratio of non-functional water points and vice versa. Though we can draw some correlations based on the rainfall and rough landscape, there remains a lot of work to be done in order to draw a convincing conclusion. Such work could range from studying more types of data like how the water points became non functional and perhaps even going down to get surveys of people actually in charge of maintenance. To conclude, this is definitely a worthy cause to deep dive into and gather further insights.\nCredits\n\nProf Kam (for providing various tips and data wrangling codes\nwhatsapp group (very helpful community!)"
  }
]